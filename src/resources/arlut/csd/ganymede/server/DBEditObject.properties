# DBEditObject.properties
#
# A default localization file for the Ganymede server
#
# Note: All single quotes must be doubled for escaping.. so "can't" becomes "can''t".
#
# Created: 3 December 2004

#
# global
#

global.buttonOK = Ok
global.serverError = Server Error

#
# init
#

init.notrans = Null DBEditSet

#
# setFieldValue
#

setFieldValue.error = DBEditObject.setFieldValue() error
setFieldValue.errorTxt = DBEditObject.setFieldValue() couldn''t find field {0} in object {1}

#
# setFieldValueLocal
#

setFieldValueLocal.error = DBEditObject.setFieldValueLocal() error
setFieldValueLocal.errorTxt = DBEditObject.setFieldValueLocal() couldn''t find field {0} in object {1}

#
# canSeeField
#

canSeeField.mismatch = field/object mismatch

#
# cloneFromObject
#

cloneFromObject.error = Clone Error
cloneFromObject.typeError = Can''t clone an object of the wrong type.  This is an internal error.
cloneFromObject.possibleError = Possible Clone Problems

#
# createNewEmbeddedObject
#

createNewEmbeddedObject.embeddedError = Error in server, DBEditObject.createNewEmbeddedObject() called on non-embedded object
createNewEmbeddedObject.badCreate = DBEditObject.createNewEmbeddedObject could not get a useful result from create_db_object
createNewEmbeddedObject.badSession = Error in custom code on server.  createNewEmbeddedObject() called without a valid GanymedeSession
createNewEmbeddedObject.badTarget = Error in custom code on server.  createNewEmbeddedObject() called without a valid target

#
# choiceListHasExceptions
#

choiceListHasExceptions.badType = field not an InvidDBField

#
# inactivate
#

inactivate.error = DBEditObject.inactivate() Error
inactivate.errorTxt = This object type has not been configured to allow inactivation.

#
# finalizeInactivate
#

finalizeInactivate.removeSet = {0} {1} has been inactivated.\n\nThe object is due to be removed from the database at {2}.\n\n
finalizeInactivate.noRemove = {0} {1} has been inactivated.\n\nThe object has no removal date set.\n\n

#
# reactivate
#

reactivate.error = DBEditObject.reactivate() Error
reactivate.errorTxt = I can''t reactivate this object.  It was not inactivated.

#
# finalizeReactivate
#

finalizeReactivate.message = {0} {1} has been reactivated.\n\n

#
# finalizeRemove
#

finalizeRemove.error = Object Removal Error
finalizeRemove.errorTxt = Could not delete object {0}.  Custom code in the server rejected this operation.
finalizeRemove.myError = Server: Error in DBEditObject.finalizeRemove()
finalizeRemove.badDelete = Custom code disapproved of deleting element from field {0}.
finalizeRemove.badDeletePerm = Permissions violation during attempted deletion of element from field {0}.
finalizeRemove.badScalarClear = Custom code disapproved of clearing the value held in field {0}.

#
# clearBackLink
#

clearBackLink.badRef = DBEditObject.clearBackLink(): Couldn''t find old reference
clearBackLink.badRefTxt = Your operation could not succeed because {0} was linked to a remote reference {1} that could not be resolved for unlinking.\n\nThis is a serious logic error in the server.  You should run the invid diagnostics in the admin console.
clearBackLink.badUnlink = DBEditObject.clearBackLink(): Couldn''t unlink old reference
clearBackLink.perm = You don''t have permission to unlink object {0} from one or more fields in object {1}.
clearBackLink.badTarget = Your operation could not succeed due to an error in the server''s custom schema code.  Target field {0} in object {1} is not an Invid field.
clearBackLink.badSchema = Your operation could not succeed due to an inconsistency in the server''s database schema.  Target field number {0} in object {1} does not exist, or you do not have permission to access this field.

#
# emitXMLDelta
#

emitXMLDelta.bad_state = Can''t call emitXMLDelta on a DBEditObject in the CREATING, DELETING, or DROPPING state.

#
# diff
#
# we use diff.field_template to build up {0} in the following diff message strings

diff.field_template = \t{0}: {1}\n
diff.anon_field_template = \t{0}\n
diff.added = Fields Added:\n\n{0}\n
diff.changed = Fields Changed:\n\n{0}\n
diff.deleted = Fields Deleted:\n\n{0}\n
