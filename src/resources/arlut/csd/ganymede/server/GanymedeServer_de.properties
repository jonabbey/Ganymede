# GanymedeServer.properties
#
# A default localization file for the Ganymede server
#
# Note: All single quotes must be doubled for escaping.. so "can't" becomes "can''t".
#
# Created: 21 May 2004

#
# constructors
#

#init.multiserver = Error: attempted to start a second server
init.multiserver = Fehler: Es wurde versucht, einen zweiten Server zu starten

#
# processLogin()
#

#processLogin.nopersonapass = GanymedeServer.processLogin(): Couldn''t get password for persona {0}.
processLogin.nopersonapass = GanymedeServer.processLogin(): Kann Passwort für Rolle {0} nicht lesen.
#processLogin.nopass = GanymedeServer.processLogin(): null clientpass..
processLogin.nopass = GanymedeServer.processLogin(): Client-Passwort ist null...

#
# incrementAndTestLoginSemaphore
#

#incrementAndTestLoginSemaphore.nologins = No logins allowed
incrementAndTestLoginSemaphore.nologins = Anmelden nicht erlaubt

#incrementAndTestLoginSemaphore.nologins_shutdown = The server is currently waiting to shut down.  No logins will be accepted until the server has restarted.
incrementAndTestLoginSemaphore.nologins_shutdown = Der Server befindet sich beim Herunterfahren. Anmelden ist erst nach dem Neustart wieder möglich.

#incrementAndTestLoginSemaphore.nologins_shutdown_reason = The server is currently waiting to shut down.  No logins will be accepted until the server has restarted.\n\nReason for shutdown: {0}

#incrementAndTestLoginSemaphore.nologins_semaphore = Can''t log in to the Ganymede server.. semaphore disabled: {0}
incrementAndTestLoginSemaphore.nologins_semaphore = Anmeldung am Server nicht möglich.. Semaphor gesperrt: {0}

#
# reportFailedLogin
#

#reportFailedLogin.badlogevent = Bad login attempt for username: {0} from host {1}
reportFailedLogin.badlogevent = Fehlgeschlagener Anmeldeversuch von Benutzer {0} an Rechner {1}

#reportFailedLogin.badlogin = Bad login attempt
reportFailedLogin.badlogin = Fehlgeschlagener Anmeldeversuch

#reportFailedLogin.badlogintext = Bad username or password, login rejected.
reportFailedLogin.badlogintext = Falscher Benutzername oder falsches Passwort. Anmeldung abgewiesen.

#
# reportSuccessLogin
#

#reportSuccessLogin.loggedin = {0} logged in from {1}
reportSuccessLogin.loggedin = {0} ist angemeldet auf {1}
#reportSuccessLogin.logevent = OK login for username: {0} from host {1}
reportSuccessLogin.logevent = Anmeldung von Benutzer {0} an Rechner {1} erfolgreich

#
# addRemoteUser
#

#addRemoteUser.logged_in = User {0} logged in
addRemoteUser.logged_in = Benutzer {0} angemeldet

#
# removeRemoteUser
#

#removeRemoteUser.logged_out = User {0} logged out
removeRemoteUser.logged_out = Benutzer {0} abgemeldet

#
# clearActiveUser()
#

#clearActiveUser.deathThread = Ganymede Shutdown Thread
clearActiveUser.deathThread = Ganymede Shutdown Prozess

#
# getTextMessage()
#

#getTextMessage.badargs = Error, attempt to use path separator in message key
getTextMessage.badargs = Fehler: Versuch, Pfad-Separator in Meldungsschlüssel zu benutzen
#getTextMessage.nodir = GanymedeServer.getTextMessage(): messageDirectoryProperty not set.  Can''t provide {0}
getTextMessage.nodir = GanymedeServer.getTextMessage(): messageDirectory-Property ist nicht gesetzt.  Kann {0} nicht zur Verfügung stellen
#getTextMessage.IOExceptionReport = IOException in GanymedeServer.getTextMessage({0}):\n{1}
getTextMessage.IOExceptionReport = IO-Exception in GanymedeServer.getTextMessage({0}) aufgetreten:\n{1}

#
# admin()
#

#admin.connect_failure = Admin Console Connect Failure
admin.connect_failure = Verbindungsfehler Administrator-Konsole
#admin.semaphore_failure = Can''t connect admin console to server.. semaphore disabled: {0}
admin.semaphore_failure = Administrator-Konsole kann nicht mit Server verbunden werden. Semaphor gesperrt: {0}
#admin.badlogevent = Bad console attach attempt by: {0} from host {1}
admin.badlogevent = Fehlgeschlagener Versuch von {0}, Konsole auf Rechner {1} zu starten
#admin.goodlogevent = Admin console attached for admin: {0} from host: {1}
admin.goodlogevent = Administrator-Konsole für {0} auf Rechner {1} eingerichtet
#admin.badlogin = Login Failure
admin.badlogin = Anmeldung fehlgeschlagen
#admin.baduserpass = Bad username and/or password for admin console
admin.baduserpass = Falscher Benutzer oder falsches Passwort für Administrator-Konsole

#
# setShutdown()
#

#setShutDown.nousers_state = No users logged in, shutting down.
setShutDown.nousers_state = Keine Benutzer angemeldet, fahre herunter.
#setShutDown.waiting_state = Server going down.. waiting for users to log out
setShutDown.waiting_state = Server wird heruntergefahren... Warte, bis alle Benutzer abgemeldet sind

#
# shutdown()
#

#shutdown.failure = Shutdown failure
shutdown.failure = Herunterfahren fehlgeschlagen
#shutdown.failure_text = Shutdown failure.. couldn''t shutdown the server, semaphore already locked with condition {0}
shutdown.failure_text = Herunterfahren fehlgeschlagen. Der Server konnte nicht heruntergefahren werden, Semaphor ist blockiert mit Bedingung {0}
#shutdown.goingdown = Server going down.. waiting for any builder tasks to finish phase 2
shutdown.goingdown = Server wird heruntergefahren... Warte auf Abschluss von Phase 2 der Builder-Prozesse
#shutdown.dumping = Server going down.. performing final dump
shutdown.dumping = Server wird heruntergefahren... Letzter Dump wird ausgeführt
#shutdown.dumperror = shutdown error: couldn''t successfully consolidate db.
shutdown.dumperror = Fehler beim Herunterfahren: Kann DB nicht erfolgreich konsolidieren.
#shutdown.locked = Server going down.. database locked
shutdown.locked = Server wird heruntergefahren... Datenbank gesperrt
#shutdown.clients = Server going down.. disconnecting clients
shutdown.clients = Server wird heruntergefahren... Clients werden abgemeldet
#shutdown.scheduler = Server going down.. interrupting scheduler
shutdown.scheduler = Server wird heruntergefahren... Scheduler wird angehalten
#shutdown.consoles = Server going down.. disconnecting consoles
shutdown.consoles = Server wird heruntergefahren... Konsolen werden abgemeldet
#shutdown.jython = Server going down.. disconnecting Jython consoles
shutdown.jython = Server wird heruntergefahren... Jython-Konsolen werden abgemeldet
#shutdown.byeconsoles = Server going down now.
shutdown.byeconsoles = Server wird nun heruntergefahren.
#shutdown.logevent = Server shutdown
shutdown.logevent = Server heruntergefahren
#shutdown.closinglog = Server completing shutdown.. waiting for log thread to complete.
shutdown.closinglog = Server wird heruntergefahren... Warte auf Beendigung des Log-Prozesses
#shutdown.logIOException = IO Exception closing log file: {0}
shutdown.logIOException = IO-Exception {0} beim Schliessen der Log-Datei
#shutdown.Exception = Caught exception during final shutdown:
shutdown.Exception = In der letzten Phase des Herunterfahrens trat Exception auf:
#shutdown.Error = Caught error during final shutdown:
shutdown.Error = In der letzten Phase des Herunterfahrens trat Fehler auf:
#shutdown.finally = Server shutdown complete.
shutdown.finally = Herunterfahren des Servers abgeschlossen.

#
# sweepInvids()
#

#sweepInvids.noproceed = sweepInvids couldn''t proceed.
sweepInvids.noproceed = sweepInvids kann nicht weiterlaufen.
#sweepInvids.sweeping = GanymedeServer.sweepInvids(): sweeping {0}
sweepInvids.sweeping = GanymedeServer.sweepInvids(): sweeping {0}
#sweepInvids.removing_vector = Removing invid: {0} from vector field {1} in object {2}:{3}
sweepInvids.removing_vector = Lösche Invid: {0} aus Vektorfeld {1} in Objekt {2}:{3}
#sweepInvids.removing_scalar = Removing invid: {0} from scalar field {1} in object {2}:{3}
sweepInvids.removing_scalar = Lösche Invid: {0} aus Skalarfeld {1} in Objekt {2}:{3}
#sweepInvids.undefining = Undefining (now) empty field: {0} from object {1}:{2}
sweepInvids.undefining = Setze nun leeres Feld {0} in Objekt {1} auf undefiniert:{2}
#sweepInvids.done = GanymedeServer.sweepInvids(): completed
sweepInvids.done = GanymedeServer.sweepInvids(): abgeschlossen

#
# checkInvids()
#

#checkInvids.noproceed = checkInvids couldn''t proceed.
checkInvids.noproceed = checkInvids kann nicht weiterlaufen.
#checkInvids.checking = Testing invid links for objects of type {0}
checkInvids.checking = Prüfe Invid-Verweise für Objekte vom Typ {0}
#checkInvids.done = Ganymede invid link test complete
checkInvids.done = Ganymede-Invid-Link-Test abgeschlossen

#
# checkEmbeddedObjects()
#

#checkEmbeddedObjects.noproceed = checkEmbeddedObjects couldn''t proceed.
checkEmbeddedObjects.noproceed = checkEmbeddedObjects kann nicht weiterlaufen.
#checkEmbeddedObjects.checking = Testing embedded object container integrity for objects of type {0}
checkEmbeddedObjects.checking = Prüfe Intergrität des embedded-object-Containers für Objekte des Typs {0}
#checkEmbeddedObjects.aha = Couldn''t find containing object for {0}:{1}
checkEmbeddedObjects.aha = Kann Containerobjekt für {0} nicht finden:{1}
#checkEmbeddedObjects.done = Ganymede embedded object test complete
checkEmbeddedObjects.done = Ganymede-Embedded-Object-Test abgeschlossen

#
# sweepEmbeddedObjects()
#

#sweepEmbeddedObjects.failure = Failure
sweepEmbeddedObjects.failure = Störung
#sweepEmbeddedObjects.failure_text = Couldn''t get a dump lock to sweep the database for embedded objects
sweepEmbeddedObjects.failure_text = Kann Dump nicht sperren, um DB nach embedded-Objects zu sweepen
#sweepEmbeddedObjects.checking = Testing embedded object container integrity for objects of type {0}
sweepEmbeddedObjects.checking = Prüfe Integrität des embedded-object-Containers für Objekte des Typs {0}
#sweepEmbeddedObjects.complete = Ganymede embedded object sweep complete
sweepEmbeddedObjects.complete = Ganymede-embedded-object-sweep abgeschlossen
#sweepEmbeddedObjects.delete_failure = Couldn''t delete object {0}
sweepEmbeddedObjects.delete_failure = Kann Objekt{0} nicht löschen
#sweepEmbeddedObjects.delete_ok = Deleted object {0}
sweepEmbeddedObjects.delete_ok = Objekt {0} gelöscht
#sweepEmbeddedObjects.error = Error
sweepEmbeddedObjects.error = Fehler
#sweepEmbeddedObjects.error_text = Mysterious not logged in error: {0}
sweepEmbeddedObjects.error_text = Merkwürdiger Not-Logged-In-Fehler: {0}

