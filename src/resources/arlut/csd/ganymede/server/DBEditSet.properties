# DBEditSet.properties
#
# A default localization file for the Ganymede server
#
# Note: All single quotes must be doubled for escaping.. so "can't" becomes "can''t".
#
# Created: 2 June 2004

#
# global
#

global.already = already committed or released

#
# constructors
#

#
# addObject()
#

addObject.cant_add = Can''t add objects to the transaction during commit.

#
# popCheckpoint()
#

popCheckpoint.no_checkpoint = DBEditSet.popCheckpoint(): couldn''t find checkpoint for {0}\nCurrently registered checkpoints:

#
# rollback()
#

rollback.non_interactive = rollback() called in non-interactive transaction

#
# commit()
#

commit.forced_abort = Forced Transaction Abort
commit.forced_abort_text = The server ran into a non-reversible error while processing this transaction and forced an abort.

# the following message is also used in commit_lockBases

commit.commit_failure = Transaction commit failure
commit.commit_failure_text = Couldn''t commit transaction, exception caught: {0}

#
# commit_log_events
#

commit_log_events.log_failure = Error!  Problem occured while writing log entry, continuing with transaction commit.\n{0}

#
# commit_lockBases()
#

commit_lockBases.wLock = Error!  DBEditSet {0} commit already has writeLock established!
commit_lockBases.interrupted = DBEditSet.commit(): lock aborted, commit failed, releasing transaction for {0}
commit_lockBases.wLock_refused = Couldn''t commit transaction, our write lock was denied.. server goind down?

#
# commit_verifyNamespaces()

commit_verifyNamespaces.conflicts = Error, namespace conflicts remaining at transaction commit time.\nThe following values are in namespace conflict:\n\t{0}

#


#
# commit_handlePhase1()
#

commit_handlePhase1.exception = Error in commitPhase1

#
# commit_checkObjectMissingFields()
#

commit_checkObjectMissingFields.missing_fields = Error, required fields not filled in
commit_checkObjectMissingFields.missing_fields_text = Error, {0} object {1} has not been completely filled out.  The following fields need to be filled in before this transaction can be committed:\n\n
commit_checkObjectMissingFields.embedded_missing_fields_text = Error, {0} object {1} contained within {2} object {3} has not been completely filled out.\n\nThe following fields need to be filled in before this transaction can be committed:\n\n

#
# commit_createLogEvent()
#

commit_createLogEvent.embedded_modified = {0} {1}''s {2} ''{3}'', <{4}> was modified.\n\n{5}
commit_createLogEvent.modified = {0} {1}, <{2}> was modified.\n\n{3}
commit_createLogEvent.embedded_created = {0} {1}''s {2} ''{3}'', <{4}> was created.\n\n{5}\n
commit_createLogEvent.created = {0} {1}, <{2}> was created.\n\n{3}\n
commit_createLogEvent.embedded_deleted = {0} {1}''s {2} ''{3}'', <{4}> was deleted.\n\n{5}\n
commit_createLogEvent.deleted = {0} {1}, <{2}> was deleted.\n\n{3}\n
commit_createLogEvent.embedded_deleted_nodiff = {0} {1}''s {2} ''{3}'', <{4}> was deleted.\n\n
commit_createLogEvent.deleted_nodiff = {0} {1}, <{2}> was deleted.\n\n

#
# commit_persistTransaction()
#

commit_persistTransaction.error = Couldn''t commit transaction, couldn''t write transaction to disk
commit_persistTransaction.error_text = Couldn''t commit transaction, the server may have run out of disk space.  Couldn''t write transaction to disk.
commit_persistTransaction.exception = Couldn''t commit transaction, IOException caught writing journal
commit_persistTransaction.exception_text = Couldn''t commit transaction, the server may have run out of disk space.\n\n{0}

#
# commit_persistTransaction()
#

commit_persistTransaction.error = Couldn''t commit transaction, couldn''t write transaction to disk
commit_persistTransaction.error_text = Couldn''t commit transaction, the server may have run out of disk space.  Couldn''t write transaction to disk.
commit_persistTransaction.exception = Couldn''t commit transaction, Exception caught writing journal
commit_persistTransaction.ioexception_text = Couldn''t commit transaction, the server may have run out of disk space.\n\n{0}
commit_persistTransaction.exception_text = Couldn''t commit transaction, an exception was caught persisting to the journal.\n\n{0}

#
# commit_writeSyncChannels()
#

commit_writeSyncChannels.badundo = ***\n*** Error in commit_writeSyncChannels()!  Couldn''t undo a transaction in the\njournal file*** after catching an exception!\n***\n*** The journal may not be completely recoverable!\n\n{0}
commit_writeSyncChannels.exception = Couldn''t write transaction to sync channel.  Exception caught writing to sync channel.
commit_writeSyncChannels.no_sync_found = Couldn''t write transaction to sync channel {0} due to a FileNotFoundException.\n\nThis sync channel is configured to write to {1}, but this directory does not exist or is not writable.\n\nTransaction Cancelled.
commit_writeSyncChannels.ioexception_text = Couldn''t write transaction to sync channels due to an IOException.   The server may have run out of disk space.\n\n{0}
commit_writeSyncChannels.exception_text = Exception caught while writing to sync channels.  Sync channels write aborted.\n\n{0}

#
# commit_finalizeTransaction()
#

commit_finalizeTransaction.badundo = ***\n*** Error in commit_finalizeTransaction()!  Couldn''t undo a transaction in the\njournal file after catching an exception!\n***\n*** The journal may not be completely recoverable!\n\n{0}
commit_finalizeTransaction.exception = Couldn''t finalize transaction to journal.  IOException caught writing to journal.
commit_finalizeTransaction.exception_text = Couldn''t finalize transaction to journal, the server may have run out of disk space.\n\n{0}
