# DBObject.properties
#
# A default localization file for the Ganymede server
#
# Note: All single quotes must be doubled for escaping.. so "can't" becomes "can''t".
#
# Created: 3 September 2004

#
# global
#

#global.pseudostatic = Error, called an instance method on a pseudo-static DBEditObject subclass
global.pseudostatic = Fehler: Für eine pseudostatische DBEditObject-Unterklasse wurde eine Instanzierungsmethode aufgerufen
#global.pseudostatic_constructor = Error, tried to call the DBObject view-copy constructor with a pseudo-static DBEditObject
global.pseudostatic_constructor = Fehler: Für ein pseudestatisches DBEditObject wurde der DBObject view-copy constructor aufgerufen
#global.bad_field_name = Error, object type {0} does not contain a field named "{1}".
global.bad_field_name = Fehler: Der Objekt-Typ {0} besitzt kein Feld mit dem Namen "{1}".
#global.no_read_perms = Don''t have permission to read field {0} in object {1}
global.no_read_perms = Keine Berechtigung zum Lesen von Feld {0} in Objekt {1}

#
# getFieldPerm
#

#getFieldPerm.nofield = Unrecognized fieldcode: {0}
getFieldPerm.nofield = Unbekannter Feldbezeichner: {0}

#
# getLabel
#

#getLabel.null_label = New {0}: {1,number,#}
getLabel.null_label = Neu {0}: {1,number,#}

#
# emit
#

#emit.nofields = **** Error: writing object with no fields: {0}
emit.nofields = **** Fehler: Schreibe Objekt ohne Felder: {0}

#
# receive
#

#receive.nofields = DBObject.receive(): No fields reading object {0}
receive.nofields = DBObject.receive(): Keine Felder beim Lesen des Objekts {0}
#receive.nulldef = What the heck?  Null definition for {0}, fieldcode = {1}, {2}th field in object
receive.nulldef = Was soll das?  Null-Definition für {0}, Feldbezeichner = {1}, {2}tes Feld von Objekt
#receive.badfieldtype = Don''t recognize field type in datastore.
receive.badfieldtype = Feldtyp in datastore unbekannt.
#receive.vectornamespace = Non-unique value {0} detected in vector field {1} which is constrained by namespace {2}
receive.vectornamespace = Nicht eindeutiger Wert {0} in Vektorfeld {1}, das über Namespace {2} eingeschränkt ist
#receive.scalarnamespace = Non-unique value {0} detected in scalar field {1} which is constrained by namespace {2}
receive.scalarnamespace = Nicht eindeutiger Wert {0} in Skalarfeld {1}, das über Namespace {2} eingeschränkt ist
#receive.skipping = %%% Loader skipping empty field {0}
receive.skipping = %%% Lader überspringt leeres Feld {0}
#receive.upgradeSkippingOwned = Skipped over {0} objects in deprecated OwnerObjectsOwned field while reading owner group {1}
receive.upgradeSkippingOwned = Beim Lesen von Besitzergruppe {1} wurden {0} Objekte in dem veralteten OwnerObjectsOwned-Feld übersprungen

#
# clearShadow
#

#clearShadow.mismatch = DBObject.clearShadow(): couldn''t clear, editset mismatch
clearShadow.mismatch = DBObject.clearShadow(): Kann nicht löschen, editset passt nicht

#
# addField
#

#addField.null = null value passed to addField
addField.null = Null-Wert an addField() übergeben

#
# saveField
#

#saveField.null = null value passed to saveField
saveField.null = Null-Wert an saveField() übergeben

#
# replaceField
#

#replaceField.null = null value passed to replaceField
replaceField.null = Null-Wert an replaceField() übergeben
#replaceField.none = Error, DBObject.replaceField could not find matching field
replaceField.none = Fehler: DBObject.replaceField konnte kein passendes Feld finden

#
# setFieldValue
#

#setFieldValue.noneditable = Server: Error in DBObject.setFieldValue()
setFieldValue.noneditable = Server: Fehler in DBObject.setFieldValue()
#setFieldValue.noneditabletext = setFieldValue called on a non-editable object
setFieldValue.noneditabletext = setFieldValue wurde für ein nicht editierbares Objekt aufgerufen

#
# getFieldValue
#

#getFieldValue.badtype = Couldn''t get scalar value on vector field {0}
getFieldValue.badtype = Kann von Vektorfeld {0} keinen Skalarwert erhalten 

#
# isSet
#

#isSet.vector = Can''t call isSet on a vector field.
isSet.vector = Kann isSet() nicht für ein Vektorfeld aufrufen.

#
# getFieldValues
#

#getFieldValues.badtype = Couldn''t get vector values on scalar field {0}
getFieldValues.badtype = Kann von Skalarfeld {0} keine Vektorwerte erhalten

